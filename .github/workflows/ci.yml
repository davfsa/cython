name: CI

on: [push, pull_request]

jobs:
  ci:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      # MATRIX:
      # =======
      # Required parameters:
      #  os                  the os to run on
      #  python-version      the python version to use
      #  backend             the backend to use
      #  env                 any additional env variables. Set to '{}' for none
      matrix:
        # Tests [amd64]
        #
        # FIXME: 'cpp' tests seems to fail due to compilation errors (numpy_pythran_unit)
        # in 3.6+ and test failures (builtin_float) in 3.5<
        os: [ubuntu-18.04]
        backend: [c, cpp]
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9]
        env: [{}]

        include:
          # Ubuntu sub-jobs:
          # ================
          # Linting
          - os: ubuntu-18.04
            python-version: 3.7
            backend: "c,cpp"
            env: { TEST_CODE_STYLE: 1 }
          # Limited API
          - os: ubuntu-18.04
            python-version: 3.6
            backend: "c,cpp"
            env: { LIMITED_API: --limited-api, EXCLUDE: --no-file }
          - os: ubuntu-18.04
            python-version: 3.7
            backend: "c,cpp"
            env: { LIMITED_API: --limited-api, EXCLUDE: --no-file }
          - os: ubuntu-18.04
            python-version: 3.8
            backend: "c,cpp"
            env: { LIMITED_API: --limited-api, EXCLUDE: --no-file }
          # Stackless
          - os: ubuntu-18.04
            python-version: 2.7
            backend: c
            env: { STACKLESS: true, PY: 3 }
          - os: ubuntu-18.04
            python-version: 3.6
            backend: c
            env: { STACKLESS: true, PY: 3 }
          # Pypy
          - os: ubuntu-18.04
            python-version: pypy2
            backend: c
            env: { PYTHON_VERSION: "pypy" }
          - os: ubuntu-18.04
            python-version: pypy3
            backend: c
            env: {}
          # Pypy [allowed-failures] - These specifically test known bugs
          - os: ubuntu-18.04
            python-version: pypy2
            backend: c
            env:
              {
                PYTHON_VERSION: "pypy",
                EXCLUDE: "--listfile=tests/pypy_bugs.txt --listfile=tests/pypy2_bugs.txt bugs",
              }
          - os: ubuntu-18.04
            python-version: pypy3
            backend: c
            env:
              {
                EXCLUDE: "--listfile=tests/pypy_bugs.txt --listfile=tests/pypy2_bugs.txt bugs",
              }
          # Coverage
          - os: ubuntu-18.04
            python-version: 3.7
            backend: "c,cpp"
            env: { COVERAGE: 1 }

          # MacOS sub-jobs
          # ==============
          - os: macos-11.0
            python-version: 2.7
            backend: "c,cpp"
            env: { PY: 2, MACOSX_DEPLOYMENT_TARGET: 10.14 }
          - os: macos-11.0
            python-version: 3.9
            backend: "c,cpp"
            env: { PY: 3, MACOSX_DEPLOYMENT_TARGET: 10.14 }

    runs-on: ${{ matrix.os }}

    env:
      BACKEND: ${{ matrix.backend }}
      OS_NAME: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run CI
        env: ${{ matrix.env }}
        run: bash ./Tools/ci-run.sh

  ci-on-diff-arch:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      # MATRIX:
      # =======
      # Required parameters:
      #  backend             the backend to use
      #  arch                the architecture to use for the build (https://github.com/uraimo/run-on-arch-action#supported-platforms)
      matrix:
        # Tests [aarch64, ppc64le, s390x]
        arch: [aarch64, ppc64le] # s390x - Disabled due to test failures
        backend: [c, cpp]

    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Run CI
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu18.04

          # Not required, but speeds up builds
          # This will store the image under the projects public packages, only enable if needed!
          # githubToken: ${{ github.token }}

          env: |
            BACKEND: ${{ matrix.backend }}
            OS_NAME: ubuntu-18.04
            PYTHON_VERSION: 3.8

          dockerRunArgs: |
            --volume "${GITHUB_WORKSPACE}:/cython"

          # `software-properties-common` installs `apt-add-repository` as it seems to be missing from the images
          install: |
            apt update -q -y
            apt install -q -y sudo software-properties-common
            add-apt-repository -u ppa:deadsnakes/ppa
            apt install -q -y python3.8 python3.8-dev python3-pip

          run: |
            bash /cython/Tools/ci-run.sh
